@model DepartmentDTO

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Department</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Create Department</h2>

        @using (Html.BeginForm("Create", "Department", FormMethod.Post, new { @class = "needs-validation", @novalidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()

            <div class="mb-3">
                <label for="Name" class="form-label">Name</label>
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "Name", placeholder = "Enter department name" })
                @if (!string.IsNullOrEmpty(ViewData.ModelState[nameof(Model.Name)]?.Errors.FirstOrDefault()?.ErrorMessage))
                {
                    <div class="text-danger">@ViewData.ModelState[nameof(Model.Name)].Errors.First().ErrorMessage</div>
                }
            </div>

            <div class="mb-3">
                <label for="Description" class="form-label">Description</label>
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @id = "Description", rows = 3, placeholder = "Enter department description" })
                @if (!string.IsNullOrEmpty(ViewData.ModelState[nameof(Model.Description)]?.Errors.FirstOrDefault()?.ErrorMessage))
                {
                    <div class="text-danger">@ViewData.ModelState[nameof(Model.Description)].Errors.First().ErrorMessage</div>
                }
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
            <a href="@Url.Action("Index", "Department")" class="btn btn-secondary">Cancel</a>
        }
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
